version: '3.0'
services:
  nginx:
    image: nginx:latest
    ports:
      - ${APP_PORT}:80
    volumes:
      - .:/var/www/project
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    networks:
      - ${NETWORK_NAME}

  php:
    container_name: gf_web
    build:
      context: ./docker/php
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - .:/var/www/project
#    links:
#      - postgres
    networks:
      - ${NETWORK_NAME}
    environment:
        - ENV_DEV=${ENV_DEV}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_HOST=${POSTGRES_HOST}

  redis:
    container_name: gf_redis
    image: "redis:alpine"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "16379:6379"
    volumes:
      - ./docker/redis/redis-data:/var/lib/redis
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - ${NETWORK_NAME}

#  rabbitmq:
#    container_name: gf_rabbit
#    image: rabbitmq:3-management
#    volumes:
#      - ./docker/rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
#      - ./docker/rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
#      - ./docker/rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
#      - ./docker/rabbitmq/logs:/var/log/rabbitmq/log
#    ports:
#      - '15672:5672'
#      - '15672:15672'
#    networks:
#      - ${NETWORK_NAME}

#  memcached:
#    container_name: gf_memcached
#    image: launcher.gcr.io/google/memcached1
#    command:
#      - '-m 256'
#    ports:
#        - '11211:11211'

networks:
  frontend:
    external:
      name: global
